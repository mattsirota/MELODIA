{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\F-PC\\\\Documents\\\\VisualStudioProjects\\\\MELODIA\\\\front-end\\\\src\\\\components\\\\Recommendations.js\";\nimport React, { useState, useEffect } from 'react';\nimport './Artists.css';\nimport TrackItem from './TrackItem';\nimport axios from 'axios';\nimport 'react-dropdown/style.css';\nimport Popup from './Popup';\n\nfunction Recommendations() {\n  const [ArtistReco, setArtists] = useState([]);\n  const [TracksReco, setTracks] = useState([]);\n  const [Recommendations, setReco] = useState([]);\n  const [genres, setGenres] = useState([]);\n  const [selected, setSelected] = useState([]);\n  const dropDownGenre = ['None', 'Pop', 'Rock', 'Country', 'Hip-Hop', 'Indie', 'Dance', 'Jazz', 'Blues', 'Metal'];\n  const [isOpen, setIsOpen] = useState(false);\n  let count = 1;\n  useEffect(() => {\n    axios.get('http://localhost:5000/artists').then(response => {\n      setArtists(response.data.items);\n    });\n  }, []);\n\n  const togglePopup = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const Artits_reco_id = ArtistReco.map(artist => {\n    return artist.id;\n  });\n  useEffect(() => {\n    axios.get('http://localhost:5000/tracks').then(response => {\n      setTracks(response.data.items);\n    });\n  }, []);\n  const Tracks_reco_id = TracksReco.map(track => {\n    return track.id;\n  });\n  useEffect(() => {\n    axios.get('http://localhost:5000/artists').then(response => {\n      let genres_count = {};\n      response.data.items.map(artist => artist.genres.map(genre => genres_count[genre] = (genres_count[genre] || 0) + 1));\n      let items = Object.keys(genres_count).map(function (key) {\n        return [key, genres_count[key]];\n      }).sort(function (first, second) {\n        return second[1] - first[1];\n      });\n      let itemsGenres = [];\n      items.forEach(item => {\n        itemsGenres.push(item[0]);\n      });\n      setGenres(itemsGenres);\n      setSelected('Select genre...');\n    });\n  }, []);\n\n  function reco(artist, genres, tracks) {\n    axios.get(`http://localhost:5000/recommendations/${artist}/${genres}/${tracks}`).then(response => {\n      setReco(response.data.tracks);\n    });\n  }\n\n  function recoGenres(e) {\n    let genre = e.target.value.toLowerCase();\n    axios.get(`http://localhost:5000/recommendations/${genre}`).then(response => {\n      setReco(response.data.tracks);\n    });\n  }\n\n  const [click, setClick] = useState(false);\n\n  const handleClick = () => setClick(!click);\n  /**<div className='btn__container'>\r\n          <div className='btn__wrapper'>\r\n            <ul className='btn__items'>\r\n            <select onChange={recoGenres} className={'reco-nav-item  reco-nav-links'}>\r\n              <option selected disabled>{selected}</option>\r\n              {dropDownGenre.map((genre) => {\r\n                    return <option className={'reco-nav-links'}>{genre}</option>\r\n              })}\r\n            </select>\r\n            </ul> \r\n          </div>\r\n        </div>\r\n  */\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, \"Recommended for you\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"btn__items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    onChange: recoGenres,\n    className: 'reco-nav-item  reco-nav-links',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    selected: true,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, selected), dropDownGenre.map(genre => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      className: 'reco-nav-links',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 26\n      }\n    }, genre);\n  }))))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"btn__items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"button\",\n    value: \"Create Your Playlist\",\n    onClick: togglePopup,\n    className: \"cards__item__link btn-unselected btn btn--primary btn--large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }), isOpen && /*#__PURE__*/React.createElement(Popup, {\n    handleClose: togglePopup,\n    theList: Recommendations,\n    type: \"Recs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 28\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cards__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cards__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, Recommendations.length === 0 ? reco(Artits_reco_id[0], genres.slice(0, 3).join().replace(/ /g, \"%20\"), Tracks_reco_id[0]) : /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"cards__items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, Recommendations.map(track => /*#__PURE__*/React.createElement(TrackItem, {\n    src: track.album.images[0].url,\n    text: track.name,\n    popularity: track.popularity,\n    duration: track.duration_ms,\n    label: count++,\n    path: track.external_urls.spotify,\n    artists: track.artists,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }))))));\n}\n\nexport default Recommendations;","map":{"version":3,"sources":["C:/Users/F-PC/Documents/VisualStudioProjects/MELODIA/front-end/src/components/Recommendations.js"],"names":["React","useState","useEffect","TrackItem","axios","Popup","Recommendations","ArtistReco","setArtists","TracksReco","setTracks","setReco","genres","setGenres","selected","setSelected","dropDownGenre","isOpen","setIsOpen","count","get","then","response","data","items","togglePopup","Artits_reco_id","map","artist","id","Tracks_reco_id","track","genres_count","genre","Object","keys","key","sort","first","second","itemsGenres","forEach","item","push","reco","tracks","recoGenres","e","target","value","toLowerCase","click","setClick","handleClick","length","slice","join","replace","album","images","url","name","popularity","duration_ms","external_urls","spotify","artists"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Artists.css';\r\nimport TrackItem from './TrackItem';\r\nimport axios from 'axios';\r\nimport 'react-dropdown/style.css';\r\nimport Popup from './Popup'\r\n\r\nfunction Recommendations() {\r\n  const [ArtistReco, setArtists] = useState([])\r\n  const [TracksReco, setTracks] = useState([])\r\n  const [Recommendations, setReco] = useState([])\r\n  const [genres, setGenres] = useState([])\r\n  const [selected, setSelected] = useState([])\r\n  const dropDownGenre = ['None', 'Pop', 'Rock', 'Country', 'Hip-Hop', 'Indie', 'Dance', 'Jazz', 'Blues', 'Metal']\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  let count = 1;\r\n  \r\n  useEffect(() => {\r\n    axios.get('http://localhost:5000/artists').then(response => {\r\n      setArtists(response.data.items);\r\n    });\r\n  }, [])\r\n\r\n  const togglePopup = () => {\r\n    setIsOpen(!isOpen);\r\n  }\r\n\r\n  const Artits_reco_id = ArtistReco.map(artist => {\r\n    return artist.id;\r\n  })\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:5000/tracks').then(response => {\r\n      setTracks(response.data.items);\r\n    });\r\n  }, [])\r\n\r\n  const Tracks_reco_id = TracksReco.map(track => {\r\n    return track.id;\r\n  })\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:5000/artists').then(response => {\r\n        let genres_count = {};\r\n        response.data.items.map(artist => (\r\n            artist.genres.map(genre => (\r\n            genres_count[genre] = (genres_count[genre] || 0) + 1\r\n            ))\r\n        ))\r\n        \r\n        let items = Object.keys(genres_count).map(function(key) {\r\n            return [key, genres_count[key]];\r\n        }).sort(function(first, second) {\r\n            return second[1] - first[1];\r\n        });\r\n\r\n        let itemsGenres = [];\r\n        items.forEach(item => {\r\n            itemsGenres.push(item[0]);\r\n        });\r\n        setGenres(itemsGenres)\r\n        setSelected('Select genre...')\r\n    });\r\n  }, []);\r\n\r\n  function reco(artist, genres, tracks){\r\n      axios.get(`http://localhost:5000/recommendations/${artist}/${genres}/${tracks}`).then(response => {\r\n      setReco(response.data.tracks); \r\n    });\r\n  }\r\n\r\n  function recoGenres(e){\r\n    let genre = e.target.value.toLowerCase();\r\n    axios.get(`http://localhost:5000/recommendations/${genre}`).then(response => {\r\n    setReco(response.data.tracks);\r\n  });\r\n}\r\n\r\nconst [click, setClick] = useState(false);\r\nconst handleClick = () => setClick(!click);\r\n\r\n/**<div className='btn__container'>\r\n        <div className='btn__wrapper'>\r\n          <ul className='btn__items'>\r\n          <select onChange={recoGenres} className={'reco-nav-item  reco-nav-links'}>\r\n            <option selected disabled>{selected}</option>\r\n            {dropDownGenre.map((genre) => {\r\n                  return <option className={'reco-nav-links'}>{genre}</option>\r\n            })}\r\n          </select>\r\n          </ul> \r\n        </div>\r\n      </div>\r\n*/\r\n  return (\r\n    <div className='cards'>\r\n      <h1>Recommended for you</h1>\r\n      <div className='btn__container'>\r\n        <div className='btn__wrapper'>\r\n          <ul className='btn__items'>\r\n          <select onChange={recoGenres} className={'reco-nav-item  reco-nav-links'}>\r\n            <option selected disabled>{selected}</option>\r\n            {dropDownGenre.map((genre) => {\r\n                  return <option className={'reco-nav-links'}>{genre}</option>\r\n            })}\r\n          </select>\r\n          </ul> \r\n        </div>\r\n      </div>\r\n      <br />\r\n      <div className='btn__container'>\r\n        <div className='btn__wrapper'>\r\n          <ul className='btn__items'>\r\n            <div>\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"Create Your Playlist\"\r\n                  onClick={togglePopup}\r\n                  className='cards__item__link btn-unselected btn btn--primary btn--large'\r\n                />\r\n                {isOpen && <Popup\r\n                  handleClose={togglePopup}\r\n                  theList={Recommendations}\r\n                  type=\"Recs\"\r\n                />}\r\n            </div>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div className='cards__container'>\r\n        <div className='cards__wrapper'>\r\n        {\r\n          Recommendations.length === 0 ? (\r\n          reco(Artits_reco_id[0], (genres.slice(0, 3).join()).replace(/ /g, \"%20\"), Tracks_reco_id[0])\r\n          ):(\r\n          <ul className='cards__items'>\r\n          {\r\n              Recommendations.map(track => (\r\n                <TrackItem\r\n                src={track.album.images[0].url}\r\n                text={track.name}\r\n                popularity={track.popularity}\r\n                duration={track.duration_ms}\r\n                label={count++}\r\n                path={track.external_urls.spotify}\r\n                artists={track.artists}\r\n                />\r\n              ))\r\n            }\r\n          </ul>\r\n          )}\r\n        </div>\r\n      </div> \r\n    </div> \r\n  );\r\n}\r\n\r\nexport default Recommendations;"]},"metadata":{},"sourceType":"module"}