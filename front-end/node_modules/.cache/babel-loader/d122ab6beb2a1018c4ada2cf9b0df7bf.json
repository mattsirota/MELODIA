{"ast":null,"code":"var _jsxFileName = \"/Users/ekocibelli/Documents/GitHub/MELODIA/front-end/src/components/RecoDropdown.js\";\nimport React, { useState } from 'react';\nimport { RecoMenuItems } from './RecoMenuItems';\nimport './RecoDropdown.css';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Selected from './Recommendations';\n\nfunction RecoDropdown() {\n  const [click, setClick] = useState(false);\n\n  const handleClick = () => setClick(!click);\n\n  const [Recommendations, setReco] = useState([]);\n  const dropDownGenre = ['None', 'Pop', 'Rock', 'Country', 'Hip-Hop', 'Indie', 'Dance', 'Jazz', 'Blues', 'Metal'];\n\n  function recoGenres(e) {\n    let genre = e.target.value.toLowerCase();\n    axios.get(`http://localhost:5000/recommendations/${genre}`).then(response => {\n      setReco(response.data.tracks);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"ul\", {\n    onClick: handleClick,\n    className: click ? 'dropdown-menu clicked' : 'dropdown-menu',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, dropDownGenre.map(genre => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"dropdown-link\",\n      onClick: () => setClick(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }\n    }, genre));\n  })));\n}\n\nexport default RecoDropdown;","map":{"version":3,"sources":["/Users/ekocibelli/Documents/GitHub/MELODIA/front-end/src/components/RecoDropdown.js"],"names":["React","useState","RecoMenuItems","Link","axios","Selected","RecoDropdown","click","setClick","handleClick","Recommendations","setReco","dropDownGenre","recoGenres","e","genre","target","value","toLowerCase","get","then","response","data","tracks","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,OAAO,oBAAP;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,mBAArB;;AAEA,SAASC,YAAT,GAAwB;AACtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,KAAD,CAAlC;;AACA,QAAMQ,WAAW,GAAG,MAAMD,QAAQ,CAAC,CAACD,KAAF,CAAlC;;AACA,QAAM,CAACG,eAAD,EAAkBC,OAAlB,IAA6BV,QAAQ,CAAC,EAAD,CAA3C;AACA,QAAMW,aAAa,GAAG,CAAC,MAAD,EAAS,KAAT,EAAgB,MAAhB,EAAwB,SAAxB,EAAmC,SAAnC,EAA8C,OAA9C,EAAuD,OAAvD,EAAgE,MAAhE,EAAwE,OAAxE,EAAiF,OAAjF,CAAtB;;AAGA,WAASC,UAAT,CAAoBC,CAApB,EAAsB;AACpB,QAAIC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeC,WAAf,EAAZ;AACAd,IAAAA,KAAK,CAACe,GAAN,CAAW,yCAAwCJ,KAAM,EAAzD,EAA4DK,IAA5D,CAAiEC,QAAQ,IAAI;AAC7EV,MAAAA,OAAO,CAACU,QAAQ,CAACC,IAAT,CAAcC,MAAf,CAAP;AACD,KAFC;AAGH;;AAGC,sBACE,uDACE;AACE,IAAA,OAAO,EAAEd,WADX;AAEE,IAAA,SAAS,EAAEF,KAAK,GAAG,uBAAH,GAA6B,eAF/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGK,aAAa,CAACY,GAAd,CAAmBT,KAAD,IAAW;AAC5B,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,eADZ;AAEE,MAAA,OAAO,EAAE,MAAMP,QAAQ,CAAC,KAAD,CAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGO,KAJH,CADF,CADF;AAUD,GAXA,CAJH,CADF,CADF;AAqBD;;AAED,eAAeT,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport { RecoMenuItems } from './RecoMenuItems';\nimport './RecoDropdown.css';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios'\nimport Selected from './Recommendations'\n\nfunction RecoDropdown() {\n  const [click, setClick] = useState(false);\n  const handleClick = () => setClick(!click);\n  const [Recommendations, setReco] = useState([])\n  const dropDownGenre = ['None', 'Pop', 'Rock', 'Country', 'Hip-Hop', 'Indie', 'Dance', 'Jazz', 'Blues', 'Metal']\n\n\n  function recoGenres(e){\n    let genre = e.target.value.toLowerCase();\n    axios.get(`http://localhost:5000/recommendations/${genre}`).then(response => {\n    setReco(response.data.tracks);\n  });\n}\n\n\n  return (\n    <>\n      <ul\n        onClick={handleClick}\n        className={click ? 'dropdown-menu clicked' : 'dropdown-menu'}\n      >\n        {dropDownGenre.map((genre) => {\n          return (\n            <li>\n              <a\n                className='dropdown-link'\n                onClick={() => setClick(false)}\n              >\n                {genre}\n              </a>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n}\n\nexport default RecoDropdown;"]},"metadata":{},"sourceType":"module"}