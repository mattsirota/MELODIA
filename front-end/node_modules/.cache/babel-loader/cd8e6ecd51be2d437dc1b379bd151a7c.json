{"ast":null,"code":"var _jsxFileName = \"/Users/Matt/Documents/GitHub/MELODIA/front-end/src/components/Tracks.js\";\nimport React, { useState, useEffect } from 'react';\nimport './Artists.css';\nimport TrackItem from './TrackItem';\nimport axios from 'axios';\nimport { Button, playlistButton } from './Button';\nimport { Link } from 'react-router-dom';\nimport Popup from './Popup';\nexport let theTracks = [];\n\nfunction Tracks() {\n  const [tracks, setTracks] = useState([]);\n  const [selected, setSelected] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  let ranges = [{\n    'key': 'short_term',\n    'value': 'Last Month'\n  }, {\n    'key': 'medium_term',\n    'value': 'Last 6 Months'\n  }, {\n    'key': 'long_term',\n    'value': 'All Time'\n  }];\n  let count = 1;\n  useEffect(() => {\n    axios.get('http://localhost:5000/tracks').then(response => {\n      setTracks(response.data.items);\n      theTracks = response.data.items;\n      setSelected('medium_term');\n    });\n  }, []);\n\n  const togglePopup = () => {\n    setIsOpen(!isOpen);\n  };\n\n  function getTracksByTimeRange(range) {\n    axios.get(\"http://localhost:5000/tracks/\" + range).then(res => {\n      setTracks(res.data.items);\n      theTracks = tracks;\n      console.log(theTracks);\n      setSelected(range);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"Top Tracks\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"btn__items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, ranges.map(range => /*#__PURE__*/React.createElement(\"li\", {\n    className: \"cards__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cards__item__link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: range.key === selected ? 'btn-selected btn btn--primary btn--large' : 'btn-unselected btn btn--primary btn--large',\n    onClick: () => getTracksByTimeRange(range.key),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 19\n    }\n  }, range.value)))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"button\",\n    value: \"Create Your Playlist\",\n    onClick: togglePopup,\n    className: \"cards__item__link btn-unselected btn btn--primary btn--large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }), isOpen && /*#__PURE__*/React.createElement(Popup, {\n    handleClose: togglePopup,\n    theList: tracks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 22\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cards__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cards__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"cards__items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, tracks.map(track => /*#__PURE__*/React.createElement(TrackItem, {\n    src: track.album.images[0].url,\n    text: track.name,\n    popularity: track.popularity,\n    duration: track.duration_ms,\n    label: count++,\n    path: track.external_urls.spotify,\n    artists: track.artists,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }))))));\n}\n\nexport default Tracks;","map":{"version":3,"sources":["/Users/Matt/Documents/GitHub/MELODIA/front-end/src/components/Tracks.js"],"names":["React","useState","useEffect","TrackItem","axios","Button","playlistButton","Link","Popup","theTracks","Tracks","tracks","setTracks","selected","setSelected","isOpen","setIsOpen","ranges","count","get","then","response","data","items","togglePopup","getTracksByTimeRange","range","res","console","log","map","key","value","track","album","images","url","name","popularity","duration_ms","external_urls","spotify","artists"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './Artists.css';\nimport TrackItem from './TrackItem';\nimport axios from 'axios'\nimport { Button, playlistButton } from './Button';\nimport { Link } from 'react-router-dom';\nimport Popup from './Popup'\n\nexport let theTracks = [];\nfunction Tracks() {\n  const [tracks, setTracks] = useState([])\n  const [selected, setSelected] = useState([])\n  const [isOpen, setIsOpen] = useState(false);\n  let ranges = [{'key':'short_term', 'value':'Last Month'}, {'key':'medium_term', 'value':'Last 6 Months'}, {'key':'long_term', 'value':'All Time'}]\n  let count = 1;\n  useEffect(() => {\n    axios.get('http://localhost:5000/tracks').then(response => {\n      setTracks(response.data.items);\n      theTracks = response.data.items;\n      setSelected('medium_term')\n    });\n  }, [])\n\n  const togglePopup = () => {\n    setIsOpen(!isOpen);\n  }\n\n  function getTracksByTimeRange(range) {\n    axios\n        .get(\"http://localhost:5000/tracks/\" + range)\n        .then(res => {\n            setTracks(res.data.items);\n            theTracks = tracks;\n            console.log(theTracks);\n            setSelected(range)\n          }\n        )\n  }\n  return (\n    <div className='cards'>\n      <h1>Top Tracks</h1>\n      <div className='btn__container'>\n        <div className='btn__wrapper'>\n          <ul className='btn__items'>\n            {ranges.map(range => \n              <li className='cards__item'>\n                <div className='cards__item__link'>\n                  <button className={range.key === selected ? 'btn-selected btn btn--primary btn--large' : 'btn-unselected btn btn--primary btn--large'} onClick={() => getTracksByTimeRange(range.key)}>{range.value}</button>\n                </div>\n              </li>\n            )}\n          </ul> \n        </div>\n        <div>\n          <input\n            type=\"button\"\n            value=\"Create Your Playlist\"\n            onClick={togglePopup}\n            className='cards__item__link btn-unselected btn btn--primary btn--large'\n          />\n          {isOpen && <Popup\n            handleClose={togglePopup}\n            theList={tracks}\n          />}\n        </div>\n      </div>\n      <div className='cards__container'>\n        <div className='cards__wrapper'>\n          <ul className='cards__items'>\n            {\n              tracks.map(track => (\n              <TrackItem\n                src={track.album.images[0].url}\n                text={track.name}\n                popularity={track.popularity}\n                duration={track.duration_ms}\n                label={count++}\n                path={track.external_urls.spotify}\n                artists={track.artists}\n                />\n              ))\n            }\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Tracks;\n"]},"metadata":{},"sourceType":"module"}