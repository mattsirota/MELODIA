{"ast":null,"code":"var _jsxFileName = \"/Users/priyankashiyani/Documents/GitHub/MELODIA/front-end/src/components/Recommendations.js\";\nimport React, { useState, useEffect } from 'react';\nimport './Artists.css';\nimport RecomItem from './RecomItems';\nimport axios from 'axios';\nimport { Button, playlistButtonReco } from './Button';\nimport { Link } from 'react-router-dom';\n\nfunction Recommendations() {\n  const [ArtistReco, setArtists] = useState([]);\n  const [TracksReco, setTracks] = useState([]);\n  const [Recommendations, setReco] = useState([]);\n  const [genres, setGenres] = useState([]);\n  let count = 1;\n  useEffect(() => {\n    axios.get('http://localhost:5000/artists').then(response => {\n      setArtists(response.data.items);\n    });\n  }, []);\n  const Artits_reco_id = ArtistReco.map(artist => {\n    return artist.id;\n  });\n  useEffect(() => {\n    axios.get('http://localhost:5000/tracks').then(response => {\n      setTracks(response.data.items);\n    });\n  }, []);\n  const Tracks_reco_id = TracksReco.map(track => {\n    return track.id;\n  });\n  useEffect(() => {\n    axios.get('http://localhost:5000/artists').then(response => {\n      let genres_count = {};\n      response.data.items.map(artist => artist.genres.map(genre => genres_count[genre] = (genres_count[genre] || 0) + 1));\n      let items = Object.keys(genres_count).map(function (key) {\n        return [key, genres_count[key]];\n      }).sort(function (first, second) {\n        //console.log(first)\n        return second[1] - first[1];\n      });\n      let itemsGenres = [];\n      items.forEach(item => {\n        itemsGenres.push(item[0]);\n      });\n      setGenres(itemsGenres);\n    });\n  }, []);\n\n  function reco(artist, genres, tracks) {\n    axios.get(`http://localhost:5000/recommendations/${artist}/${genres}/${tracks}`).then(response => {\n      setReco(response.data.tracks);\n    });\n  }\n\n  console.log(Recommendations);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, \"Recommended for you\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/playlistreco\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Button, {\n    buttonStyle: \"cards__item__link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 37\n    }\n  }, \"Create Your Playlist\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cards__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cards__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, Recommendations.length === 0 ? reco(Artits_reco_id[0], genres.slice(0, 3).join().replace(/ /g, \"%20\"), Tracks_reco_id[0]) : /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"cards__items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, Recommendations.map(reco => /*#__PURE__*/React.createElement(RecomItem, {\n    src: reco.album.images[0].url,\n    text: reco.name,\n    path: reco.external_urls.spotify,\n    label: count++,\n    text1: reco.album.artists[0].name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }))))));\n}\n\nexport default Recommendations;","map":{"version":3,"sources":["/Users/priyankashiyani/Documents/GitHub/MELODIA/front-end/src/components/Recommendations.js"],"names":["React","useState","useEffect","RecomItem","axios","Button","playlistButtonReco","Link","Recommendations","ArtistReco","setArtists","TracksReco","setTracks","setReco","genres","setGenres","count","get","then","response","data","items","Artits_reco_id","map","artist","id","Tracks_reco_id","track","genres_count","genre","Object","keys","key","sort","first","second","itemsGenres","forEach","item","push","reco","tracks","console","log","length","slice","join","replace","album","images","url","name","external_urls","spotify","artists"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Artists.css';\nimport RecomItem from './RecomItems'\nimport axios from 'axios'\nimport { Button, playlistButtonReco} from './Button';\nimport { Link } from 'react-router-dom';\n\n\n\nfunction Recommendations() {\n  const [ArtistReco, setArtists] = useState([])\n  const [TracksReco, setTracks] = useState([])\n  const [Recommendations, setReco] = useState([])\n  const [genres, setGenres] = useState([])\n  \n  let count = 1;\n\n  useEffect(() => {\n    axios.get('http://localhost:5000/artists').then(response => {\n      setArtists(response.data.items);\n    });\n  }, [])\n\n  const Artits_reco_id = ArtistReco.map(artist => {\n    return artist.id;\n  })\n\n  useEffect(() => {\n    axios.get('http://localhost:5000/tracks').then(response => {\n      setTracks(response.data.items);\n    });\n  }, [])\n\n  const Tracks_reco_id = TracksReco.map(track => {\n    return track.id;\n  })\n\n  useEffect(() => {\n    axios.get('http://localhost:5000/artists').then(response => {\n        let genres_count = {};\n        response.data.items.map(artist => (\n            artist.genres.map(genre => (\n            genres_count[genre] = (genres_count[genre] || 0) + 1\n            ))\n        ))\n        \n        let items = Object.keys(genres_count).map(function(key) {\n            return [key, genres_count[key]];\n        }).sort(function(first, second) {\n            //console.log(first)\n            return second[1] - first[1];\n        });\n\n        let itemsGenres = [];\n        items.forEach(item => {\n            itemsGenres.push(item[0]);\n        });\n        setGenres(itemsGenres)\n    });\n  }, []);\n\n  function reco(artist, genres, tracks){\n      axios.get(`http://localhost:5000/recommendations/${artist}/${genres}/${tracks}`).then(response => {\n      setReco(response.data.tracks); \n    });\n  }\n\n  console.log(Recommendations)\n\n  return (\n    <div className='cards'>\n      <h1>Recommended for you</h1>\n      <br />\n      <h1><Link to='/playlistreco'> <Button buttonStyle='cards__item__link'>Create Your Playlist</Button></Link></h1>\n      <div className='cards__container'>\n        <div className='cards__wrapper'>\n        {\n          Recommendations.length === 0 ? (\n          reco(Artits_reco_id[0], (genres.slice(0, 3).join()).replace(/ /g, \"%20\"), Tracks_reco_id[0])\n          ):(\n          <ul className='cards__items'>\n          {\n              Recommendations.map(reco => (\n              <RecomItem\n                src={reco.album.images[0].url}\n                text={reco.name}\n                path = {reco.external_urls.spotify} \n                label = {count++}\n                text1 = {reco.album.artists[0].name}\n                />\n              ))\n            }\n          </ul>\n          )}\n        </div>\n      </div> \n    </div> \n  );\n}\n\nexport default Recommendations;\n"]},"metadata":{},"sourceType":"module"}