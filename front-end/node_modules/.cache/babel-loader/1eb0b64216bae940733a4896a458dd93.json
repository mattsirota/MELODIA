{"ast":null,"code":"var _jsxFileName = \"/Users/Matt/Documents/GitHub/MELODIA/front-end/src/components/Tracks.js\";\nimport React, { useState, useEffect } from 'react';\nimport './Artists.css';\nimport TrackItem from './TrackItem';\nimport axios from 'axios';\nimport { Button, playlistButton } from './Button';\nimport { Link } from 'react-router-dom';\nimport Popup from './Popup';\n\nfunction Tracks() {\n  const [tracks, setTracks] = useState([]);\n  const [selected, setSelected] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  let ranges = [{\n    'key': 'short_term',\n    'value': 'Last Month'\n  }, {\n    'key': 'medium_term',\n    'value': 'Last 6 Months'\n  }, {\n    'key': 'long_term',\n    'value': 'All Time'\n  }];\n  let count = 1;\n  useEffect(() => {\n    axios.get('http://localhost:5000/tracks').then(response => {\n      setTracks(response.data.items);\n      console.log(response.data.items);\n      setSelected('medium_term');\n    });\n  }, []);\n\n  const togglePopup = () => {\n    setIsOpen(!isOpen);\n  };\n\n  function getTracksByTimeRange(range) {\n    axios.get(\"http://localhost:5000/tracks/\" + range).then(res => {\n      setTracks(res.data.items);\n      setSelected(range);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"Top Tracks\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"btn__items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, ranges.map(range => /*#__PURE__*/React.createElement(\"li\", {\n    className: \"cards__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cards__item__link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: range.key === selected ? 'btn-selected btn btn--primary btn--large' : 'btn-unselected btn btn--primary btn--large',\n    onClick: () => getTracksByTimeRange(range.key),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 19\n    }\n  }, range.value)))), /*#__PURE__*/React.createElement(Button.playlistButton, {\n    buttonStyle: \"cards__item__link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"Create Your Playlist\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"button\",\n    value: \"Create Your Playlist\",\n    onClick: togglePopup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }), isOpen && /*#__PURE__*/React.createElement(Popup, {\n    content: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 19\n      }\n    }, \"Design your Popup\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 19\n      }\n    }, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 19\n      }\n    }, \"Test button\")),\n    handleClose: togglePopup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 26\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cards__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cards__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"cards__items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, tracks.map(track => /*#__PURE__*/React.createElement(TrackItem, {\n    src: track.album.images[0].url,\n    text: track.name,\n    popularity: track.popularity,\n    duration: track.duration_ms,\n    label: count++,\n    path: track.external_urls.spotify,\n    artists: track.artists,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }))))));\n}\n\nexport default Tracks;","map":{"version":3,"sources":["/Users/Matt/Documents/GitHub/MELODIA/front-end/src/components/Tracks.js"],"names":["React","useState","useEffect","TrackItem","axios","Button","playlistButton","Link","Popup","Tracks","tracks","setTracks","selected","setSelected","isOpen","setIsOpen","ranges","count","get","then","response","data","items","console","log","togglePopup","getTracksByTimeRange","range","res","map","key","value","track","album","images","url","name","popularity","duration_ms","external_urls","spotify","artists"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './Artists.css';\nimport TrackItem from './TrackItem';\nimport axios from 'axios'\nimport { Button, playlistButton } from './Button';\nimport { Link } from 'react-router-dom';\nimport Popup from './Popup'\n\nfunction Tracks() {\n  const [tracks, setTracks] = useState([])\n  const [selected, setSelected] = useState([])\n  const [isOpen, setIsOpen] = useState(false);\n  let ranges = [{'key':'short_term', 'value':'Last Month'}, {'key':'medium_term', 'value':'Last 6 Months'}, {'key':'long_term', 'value':'All Time'}]\n  let count = 1;\n  useEffect(() => {\n    axios.get('http://localhost:5000/tracks').then(response => {\n      setTracks(response.data.items);\n      console.log(response.data.items);\n      setSelected('medium_term')\n    });\n  }, [])\n\n  const togglePopup = () => {\n    setIsOpen(!isOpen);\n  }\n\n  function getTracksByTimeRange(range) {\n    axios\n        .get(\"http://localhost:5000/tracks/\" + range)\n        .then(res => {\n            setTracks(res.data.items);\n            setSelected(range)\n          }\n        )\n  }\n  \n  return (\n    <div className='cards'>\n      <h1>Top Tracks</h1>\n      <div className='btn__container'>\n        <div className='btn__wrapper'>\n          <ul className='btn__items'>\n            {ranges.map(range => \n              <li className='cards__item'>\n                <div className='cards__item__link'>\n                  <button className={range.key === selected ? 'btn-selected btn btn--primary btn--large' : 'btn-unselected btn btn--primary btn--large'} onClick={() => getTracksByTimeRange(range.key)}>{range.value}</button>\n                </div>\n              </li>\n            )}\n            <Button.playlistButton buttonStyle='cards__item__link'>Create Your Playlist</Button.playlistButton>\n            <div>\n              <input\n                type=\"button\"\n                value=\"Create Your Playlist\"\n                onClick={togglePopup}\n              />\n              {isOpen && <Popup\n                content={<>\n                  <b>Design your Popup</b>\n                  <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\n                  <button>Test button</button>\n                </>}\n                handleClose={togglePopup}\n              />}\n            </div>\n          </ul> \n        </div>\n      </div>\n      <div className='cards__container'>\n        <div className='cards__wrapper'>\n          <ul className='cards__items'>\n            {\n              tracks.map(track => (\n              <TrackItem\n                src={track.album.images[0].url}\n                text={track.name}\n                popularity={track.popularity}\n                duration={track.duration_ms}\n                label={count++}\n                path={track.external_urls.spotify}\n                artists={track.artists}\n                />\n              ))\n            }\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Tracks;\n"]},"metadata":{},"sourceType":"module"}